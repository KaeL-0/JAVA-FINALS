//Implement Array list here

public class Main {
    public static void main(String[] args) {
        Seller seller1 = new Seller();
        seller1.updateCatalogue();
        seller1.displayCatalogue();

        Customer customer1 = new Customer();

        customer1.viewCatalogue();

    }
}

public abstract class User {
    String name;
    String email;
    String address;
    String phoneNumber;

    static Catalogue catalogue = new Catalogue();


}

public class Customer extends User{
    private int customerID;
    
    Customer(){
        this.customerID = 0;
    }
    
    public int getCustomerID() {
        return customerID;
    }

    public void setCustomerID(int customerID) {
        this.customerID = customerID;
    }

    Order order1 = new Order();
    Order order2 = new Order();

    Order [] orderList = {order1, order2};

    ShoppingCart shoppingCart = new ShoppingCart(orderList);


    void viewCatalogue(){
        System.out.println("CUSTOMER VIEW");
        catalogue.viewCatalogue();

    }
}

class Seller extends User {
    int sellerId;
    String businessName;

    Product product1 = new Product(1, "Mouse", 500, 10, "It's a great mouse");
    Product product2 = new Product(2, "Keyboard", 1000, 10, "It's a great keyboard");
    Product product3 = new Product(3, "Monitor", 1500, 5, "It's a great monitor");

    Product[] productList = {product1, product2, product3};

    public void addProduct(Product product) {
        catalogue.addProduct(product);
        System.out.println(product.getProductName() + " has been added to the catalogue.");
    }

    public void removeProduct(Product product) {
        catalogue.removeProduct(product);
        System.out.println(product.getProductName() + " has been removed from the catalogue.");
    }

    public void editProduct(Product product, String newName, double newPrice, String newDescription) {

        product.setProductName(newName);
        product.setProductPrice(newPrice);
        product.productDescription = newDescription;
        System.out.println(product.getProductName() + " has been updated.");
    }

    void updateCatalogue() {
        catalogue.addProduct(productList);
    }

    void displayCatalogue() {
        System.out.println("SELLER VIEW");
        catalogue.viewCatalogue();
    }
}

class Catalogue {
    private List<Product> products = new ArrayList<>();

    void addProduct(Product[] productList) {
        for (Product product : productList) {
            products.add(product);
        }
    }

    void addProduct(Product product) {
        products.add(product);
    }

    void removeProduct(Product product) {
        products.remove(product);
    }

    void viewCatalogue() {
        if (products.isEmpty()) {
            System.out.println("No products available.");
            return;
        }
        for (Product product : products) {
            product.displayProduct();
        }
    }
}

public class Product {

    private int productID;
    private String productName;
    private double productPrice;
    private int stockNum;
    String productDescription;

    Product(int productID, String productName,  double productPrice, int stockNum, String productDescription){
        this.productID = productID;
        this.productName = productName;
        this.productPrice = productPrice;
        this.stockNum = stockNum;
        this.productDescription = productDescription;

    }


    void displayProduct() {
        System.out.println("PRODUCT");
        System.out.println("ID: " + productID);
        System.out.println("Name: " + productName);
        System.out.println("Price: " + productPrice);
        System.out.println("Stock: " + stockNum);
        System.out.println("Description: " + productDescription + "\n");
    }



    public void updateStock(int stockNum) {
        this.stockNum = stockNum;
    }

    public int getProductID() {
        return productID;
    }

    public void setProductID(int productID) {
        this.productID = productID;
    }

    public String getProductName() {
        return productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }


    public double getProductPrice() {
        return productPrice;
    }

    public void setProductPrice(double productPrice) {
        this.productPrice = productPrice;
    }


    public int getStock() {
        return stockNum;
    }



}


public class ShoppingCart {
  //Complete this

    Order [] orderList;

    ShoppingCart(Order [] orderList){
        this.orderList = orderList;

    }

    //Process order list through Shopping cart class

/*Method to add
  +addCartItem() +removeCartItem()
  +updateQuantity()
  +viewCart() +checkOut()
*/

}

public class Order extends OrderDetails {
  //Complete this

}


public abstract class OrderDetails {
//Complete this
    int orderId;


}

public class Payment{
  //Complete this

}
